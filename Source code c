

#include <stdio.h>
#include <stdlib.h> 
#include <string.h> 

     struct Book
    {
        char Title[50];
        char Author[50];
        char genre[50];
        int book_id ;
    };
     struct Book *books;
     int n ;
     int Maxbuku = 10 ;
     int Bukusaatini = 0;



    int PengisiJumlahbuku(){
        int a ;
        scanf("%d" , &a);
        while (getchar() != '\n');
        return a ;
        
    }
    void PengisiDataBuku(int a ,int b){
       if (b > Maxbuku)
       {
            Maxbuku = b + Maxbuku ;
            books = (struct Book*)realloc(books , Maxbuku * sizeof(books)) ;
       }
       
      char input[10];  
    for (int i = 0; i < a; i++) {
        printf("Masukkan data Buku ke-%d \n", Bukusaatini + 1);
        
        printf("Masukkan Judul Buku: ");
        fgets(books[i].Title, sizeof(books[i].Title), stdin);
        books[i].Title[strcspn(books[i].Title, "\n")] = '\0';  
        
        printf("Author: ");
        fgets(books[i].Author, sizeof(books[i].Author), stdin);
        books[i].Author[strcspn(books[i].Author, "\n")] = '\0';

        printf("Genre: ");
        fgets(books[i].genre, sizeof(books[i].genre), stdin);
        books[i].genre[strcspn(books[i].genre, "\n")] = '\0';  

        printf("Book_Id: ");
        fgets(input, sizeof(input), stdin);  
        books[i].book_id = atoi(input);    
        Bukusaatini++; 
    } 
    }
    
    void CetakBuku(int a){
        for (int i = 0; i < a; i++)
        {
            printf("\nData Buku ke - %d " , i+1);
            printf("\nJudul Buku : %s " , books[i].Title);
            printf("\nAuthor : %s" , books[i].Author);
            printf("\nGenre : %s" , books[i].genre );
            printf("\nBook Id : %d" , books[i].book_id);
        };
         
    }
    void HapusBuku(int a){
        a = a-1 ;
        if (a < 0 || a >= Bukusaatini ) {
        printf("Indeks tidak valid!\n");
        return;
    }

    
    for (int i = a; i < Bukusaatini - 1; i++) {
        books[i] = books[i+1];
    }
    Bukusaatini--;  

    
    printf("Buku berhasil dihapus.\n");
};
int main() {
    char cont;
    int PilihanMenu ;
     books = (struct Book *)calloc ( Maxbuku , sizeof( struct Book));
   
    do
    {
        printf ("%s\n" , "1.Tambahkan Buku"  );
    printf ( "%s\n" , "2.Tampilkan Buku " );
    printf ( "%s" , "3.Hapus Buku \n ");
    scanf ("%d" , &PilihanMenu);

    switch (PilihanMenu)
    {
    case 1:
        printf("%s", "Masukkan Jumlah buku yang ingin di tambahkan : ");
        n = PengisiJumlahbuku() ;
        if (books == NULL)
        {
            printf ("%s ", "Alokasi Memori Error");
            return 1 ;
        }
        PengisiDataBuku(n, Bukusaatini);
     
    
        break;
        
        
    case 2 :
        if (books != NULL)
        {
            CetakBuku(Bukusaatini);
        }else {
            printf("%s\n" , "Belum ada buku yang di tambahkan");
        }
        break;
    case 3 :
    if (n > 0)
    {   
        int indeks;
        printf("Data buku Ke : ");
        scanf("%d", &indeks);
        while (getchar() != '\n'); 
        HapusBuku(indeks);
    }else printf("Tidak ada buku yang dapat dihapus");
      
        break;
        
       
    default : printf("Pilihan tidak valid!\n");
    }
  
   printf("%s" , "\nLanjut?");
   scanf(" %c", &cont);

}while (cont == 'y' || cont == 'Y');
  
    return 0;
}

    
